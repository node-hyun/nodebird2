{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  // isLoggedIn: false,\n  // signUpData: {},\n  // loginData: {},\n  me: null,\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  logOutError: null\n};\n\nvar dummyUser = function dummyUser(data) {\n  return _objectSpread(_objectSpread({}, data), {}, {\n    // saga에서 넘어온 data\n    nickname: 'terecal',\n    id: 1,\n    Posts: [{\n      id: 1\n    }],\n    Followings: [{\n      nickname: '부기초'\n    }, {\n      nickname: 'Chanho Lee'\n    }, {\n      nickname: 'neue zeal'\n    }],\n    Followers: [{\n      nickname: '부기초'\n    }, {\n      nickname: 'Chanho Lee'\n    }, {\n      nickname: 'neue zeal'\n    }]\n  });\n};\n\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'; // const reducer = (state = initialState, action) => {\n//     switch (action.type) {\n//         case \"LOG_IN\":\n//             return {\n//                 ...state,\n//                 isLoggedIn: true,\n//                 me: action.data,\n//             };\n//         case \"LOG_OUT\":\n//             return {\n//                 ...state,\n//                 isLoggedIn: false,\n//             };\n//         default:\n//             return state;\n//     }\n// };\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: true,\n        logInError: null,\n        logInDone: false\n      });\n\n    case LOG_IN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: false,\n        logInDone: true,\n        me: dummyUser(action.data)\n      });\n\n    case LOG_IN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: false,\n        logInError: action.data\n      });\n\n    case LOG_OUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: true,\n        logouterror: null,\n        logOutDone: false\n      });\n\n    case LOG_OUT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: false,\n        logOutDone: true,\n        me: null\n      });\n\n    case LOG_OUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: false,\n        logouterror: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["d:/nodebird2/front/reducers/user.js"],"names":["initialState","me","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","dummyUser","data","nickname","id","Posts","Followings","Followers","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","reducer","state","action","type","logouterror","error"],"mappings":";;;;;;AAAA,OAAO,IAAMA,YAAY,GAAG;AACxB;AACA;AACA;AACAC,EAAAA,EAAE,EAAE,IAJoB;AAKxBC,EAAAA,YAAY,EAAE,KALU;AAKH;AACrBC,EAAAA,SAAS,EAAE,KANa;AAOxBC,EAAAA,UAAU,EAAE,IAPY;AASxBC,EAAAA,aAAa,EAAE,KATS;AASF;AACtBC,EAAAA,UAAU,EAAE,KAVY;AAWxBC,EAAAA,WAAW,EAAE;AAXW,CAArB;;AAcP,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD;AAAA,yCACXA,IADW;AACL;AACTC,IAAAA,QAAQ,EAAE,SAFI;AAGdC,IAAAA,EAAE,EAAE,CAHU;AAIdC,IAAAA,KAAK,EAAE,CAAC;AAAED,MAAAA,EAAE,EAAE;AAAN,KAAD,CAJO;AAKdE,IAAAA,UAAU,EAAE,CAAC;AAAEH,MAAAA,QAAQ,EAAE;AAAZ,KAAD,EAAsB;AAAEA,MAAAA,QAAQ,EAAE;AAAZ,KAAtB,EAAkD;AAAEA,MAAAA,QAAQ,EAAE;AAAZ,KAAlD,CALE;AAMdI,IAAAA,SAAS,EAAE,CAAC;AAAEJ,MAAAA,QAAQ,EAAE;AAAZ,KAAD,EAAsB;AAAEA,MAAAA,QAAQ,EAAE;AAAZ,KAAtB,EAAkD;AAAEA,MAAAA,QAAQ,EAAE;AAAZ,KAAlD;AANG;AAAA,CAAlB;;AASA,OAAO,IAAMK,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB,C,CAEP;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBtB,YAAyB;AAAA,MAAXuB,MAAW;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,cAAL;AACI,6CACOO,KADP;AAEIpB,QAAAA,YAAY,EAAE,IAFlB;AAGIE,QAAAA,UAAU,EAAE,IAHhB;AAIID,QAAAA,SAAS,EAAE;AAJf;;AAMJ,SAAKa,cAAL;AACI,6CACOM,KADP;AAEIpB,QAAAA,YAAY,EAAE,KAFlB;AAGIC,QAAAA,SAAS,EAAE,IAHf;AAIIF,QAAAA,EAAE,EAAEO,SAAS,CAACe,MAAM,CAACd,IAAR;AAJjB;;AAMJ,SAAKQ,cAAL;AACI,6CACOK,KADP;AAEIpB,QAAAA,YAAY,EAAE,KAFlB;AAGIE,QAAAA,UAAU,EAAEmB,MAAM,CAACd;AAHvB;;AAKJ,SAAKS,eAAL;AACI,6CACOI,KADP;AAEIjB,QAAAA,aAAa,EAAE,IAFnB;AAGIoB,QAAAA,WAAW,EAAE,IAHjB;AAIInB,QAAAA,UAAU,EAAE;AAJhB;;AAMJ,SAAKa,eAAL;AACI,6CACOG,KADP;AAEIjB,QAAAA,aAAa,EAAE,KAFnB;AAGIC,QAAAA,UAAU,EAAE,IAHhB;AAIIL,QAAAA,EAAE,EAAE;AAJR;;AAMJ,SAAKmB,eAAL;AACI,6CACOE,KADP;AAEIjB,QAAAA,aAAa,EAAE,KAFnB;AAGIoB,QAAAA,WAAW,EAAEF,MAAM,CAACG;AAHxB;;AAKJ;AACI,aAAOJ,KAAP;AA1CR;AA4CH,CA7CD;;AA+CA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n    // isLoggedIn: false,\r\n    // signUpData: {},\r\n    // loginData: {},\r\n    me: null,\r\n    logInLoading: false, // 로그인 시도중\r\n    logInDone: false,\r\n    logInError: null,\r\n\r\n    logOutLoading: false, // 로그아웃 시도중\r\n    logOutDone: false,\r\n    logOutError: null,\r\n};\r\n\r\nconst dummyUser = (data) => ({\r\n    ...data, // saga에서 넘어온 data\r\n    nickname: 'terecal',\r\n    id: 1,\r\n    Posts: [{ id: 1 }],\r\n    Followings: [{ nickname: '부기초' }, { nickname: 'Chanho Lee' }, { nickname: 'neue zeal' }],\r\n    Followers: [{ nickname: '부기초' }, { nickname: 'Chanho Lee' }, { nickname: 'neue zeal' }],\r\n});\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\n// const reducer = (state = initialState, action) => {\r\n//     switch (action.type) {\r\n//         case \"LOG_IN\":\r\n//             return {\r\n//                 ...state,\r\n//                 isLoggedIn: true,\r\n//                 me: action.data,\r\n\r\n//             };\r\n//         case \"LOG_OUT\":\r\n//             return {\r\n//                 ...state,\r\n//                 isLoggedIn: false,\r\n//             };\r\n//         default:\r\n//             return state;\r\n//     }\r\n// };\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOG_IN_REQUEST:\r\n            return {\r\n                ...state,\r\n                logInLoading: true,\r\n                logInError: null,\r\n                logInDone: false\r\n            };\r\n        case LOG_IN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                logInLoading: false,\r\n                logInDone: true,\r\n                me: dummyUser(action.data)\r\n            };\r\n        case LOG_IN_FAILURE:\r\n            return {\r\n                ...state,\r\n                logInLoading: false,\r\n                logInError: action.data\r\n            };\r\n        case LOG_OUT_REQUEST:\r\n            return {\r\n                ...state,\r\n                logOutLoading: true,\r\n                logouterror: null,\r\n                logOutDone: false\r\n            };\r\n        case LOG_OUT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                logOutLoading: false,\r\n                logOutDone: true,\r\n                me: null,\r\n            };\r\n        case LOG_OUT_FAILURE:\r\n            return {\r\n                ...state,\r\n                logOutLoading: false,\r\n                logouterror: action.error,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}