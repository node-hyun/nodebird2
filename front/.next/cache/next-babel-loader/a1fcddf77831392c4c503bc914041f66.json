{"ast":null,"code":"var _jsxFileName = \"d:\\\\nodebird2\\\\front\\\\components\\\\CommentForm.js\";\nimport React, { useCallback, useEffect } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport useInput from '../hooks/useInput'; // import { useSelector } from 'react-redux';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentForm = ({\n  post\n}) => {\n  console.log(\"post.id(CommentForm) :\", post.id);\n  const dispatch = useDispatch();\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n  const onSubmitComment = useCallback(() => {\n    console.log(\"submit post.id : \", post.id); // 본문글\n\n    console.log(\"userId : \", id); // 댓글 작성자, 로그인 유저\n\n    console.log(\"commentText  : \", commentText); // 댓글내용\n  }, [commentText, id]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: 'relative',\n        marginTop: \"2px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        rows: 4,\n        value: commentText,\n        onChange: onChangeCommentText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute',\n          right: 0,\n          bottom: -40\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: \"\",\n        children: \"\\uC090\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\nCommentForm.propTypes = {};\nexport default CommentForm;","map":{"version":3,"sources":["d:/nodebird2/front/components/CommentForm.js"],"names":["React","useCallback","useEffect","Button","Form","Input","useInput","useSelector","useDispatch","ADD_COMMENT_REQUEST","CommentForm","post","console","log","id","dispatch","state","user","me","commentText","onChangeCommentText","setCommentText","onSubmitComment","position","marginTop","right","bottom","propTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,QAAP,MAAqB,mBAArB,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,kBAApC;;;AAIA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,IAAI,CAACG,EAA3C;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAGA,QAAMM,EAAE,GAAGP,WAAW,CAAES,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeJ,EAA1B;AAAA,GAAD,CAAtB;AACA,QAAM,CAACK,WAAD,EAAcC,mBAAd,EAAmCC,cAAnC,IAAqDf,QAAQ,CAAC,EAAD,CAAnE;AAEA,QAAMgB,eAAe,GAAGrB,WAAW,CAAC,MAAM;AACtCW,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,IAAI,CAACG,EAAtC,EADsC,CACK;;AAC3CF,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBC,EAAzB,EAFsC,CAEP;;AAC/BF,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BM,WAA/B,EAHsC,CAGO;AAChD,GAJkC,EAIhC,CAACA,WAAD,EAAcL,EAAd,CAJgC,CAAnC;AAMA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEQ,eAAhB;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,SAAS,EAAE;AAAnC,OAAlB;AAAA,8BACI,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,IAAI,EAAE,CAAtB;AAAyB,QAAA,KAAK,EAAEL,WAAhC;AAA6C,QAAA,QAAQ,EAAEC;AAAvD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AACI,QAAA,KAAK,EAAE;AAAEG,UAAAA,QAAQ,EAAE,UAAZ;AAAwBE,UAAAA,KAAK,EAAE,CAA/B;AAAkCC,UAAAA,MAAM,EAAE,CAAC;AAA3C,SADX;AAEI,QAAA,IAAI,EAAC,SAFT;AAGI,QAAA,QAAQ,EAAC,QAHb;AAII,QAAA,OAAO,EAAC,EAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA7BD;;AAgCAhB,WAAW,CAACiB,SAAZ,GAAwB,EAAxB;AAIA,eAAejB,WAAf","sourcesContent":["import React, { useCallback, useEffect } from 'react';\r\nimport { Button, Form, Input } from 'antd';\r\nimport useInput from '../hooks/useInput';\r\n// import { useSelector } from 'react-redux';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\r\n\r\n\r\n\r\nconst CommentForm = ({ post }) => {\r\n    console.log(\"post.id(CommentForm) :\", post.id);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    const [commentText, onChangeCommentText, setCommentText] = useInput('');\r\n\r\n    const onSubmitComment = useCallback(() => {\r\n        console.log(\"submit post.id : \", post.id); // 본문글\r\n        console.log(\"userId : \", id);  // 댓글 작성자, 로그인 유저\r\n        console.log(\"commentText  : \", commentText); // 댓글내용\r\n    }, [commentText, id]);\r\n\r\n    return (\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item style={{ position: 'relative', marginTop: \"2px\" }}>\r\n                <Input.TextArea rows={4} value={commentText} onChange={onChangeCommentText} />\r\n                <Button\r\n                    style={{ position: 'absolute', right: 0, bottom: -40 }}\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    loading=\"\"\r\n                >\r\n                    삐약\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\n\r\nCommentForm.propTypes = {\r\n};\r\n\r\n\r\nexport default CommentForm;\r\n"]},"metadata":{},"sourceType":"module"}