{"ast":null,"code":"// import { all } from 'redux-saga/effects';\nimport { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport axios from \"axios\";\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from '../reducers/user';\n\nfunction* logIn(action) {\n  try {\n    console.log('saga logIn'); // const result = yield call(logInAPI);\n    // yield delay(2000);\n\n    const result = yield call(logInAPI, action.data);\n    console.log(\"result.data(from server) : \", result.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      // data: action.data,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* logOut(action) {\n  try {\n    console.log('saga logout'); // const result = yield call(logInAPI);\n\n    yield delay(2000);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI() {\n  return axios.post('/api/follow');\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI() {\n  return axios.post('/api/unfollow');\n}\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(unfollowAPI);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  console.log(\"saga signUpAPI 실행 확인 data :\", data);\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    // yield delay(1000);\n    // console.log(\"action.data(회원 가입 정보) from saga : \", action.data);\n    const result = yield call(signUpAPI, action.data);\n    console.log(\"response for 회원 가입 at saga : \", result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchLogOut() {\n  console.log(\"saga watch 실행 check\");\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchLogIn() {\n  console.log(\"saga watch 실행 check\");\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchFollow), fork(watchUnfollow), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["D:/nodebird2/front/sagas/user.js"],"names":["all","call","delay","fork","put","takeLatest","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","logIn","action","console","log","result","logInAPI","data","type","err","error","response","logOutAPI","post","logOut","followAPI","follow","unfollowAPI","unfollow","signUpAPI","signUp","watchSignUp","watchUnfollow","watchFollow","watchLogOut","watchLogIn","userSaga"],"mappings":"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","sourcesContent":["// import { all } from 'redux-saga/effects';\r\nimport { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n    LOG_IN_REQUEST,\r\n    LOG_IN_SUCCESS,\r\n    LOG_IN_FAILURE,\r\n    LOG_OUT_REQUEST,\r\n    LOG_OUT_SUCCESS,\r\n    LOG_OUT_FAILURE,\r\n    FOLLOW_FAILURE,\r\n    FOLLOW_REQUEST,\r\n    FOLLOW_SUCCESS,\r\n    UNFOLLOW_FAILURE,\r\n    UNFOLLOW_REQUEST,\r\n    UNFOLLOW_SUCCESS,\r\n    SIGN_UP_REQUEST,\r\n    SIGN_UP_SUCCESS,\r\n    SIGN_UP_FAILURE,\r\n} from '../reducers/user';\r\n\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        console.log('saga logIn');\r\n        // const result = yield call(logInAPI);\r\n        // yield delay(2000);\r\n        const result = yield call(logInAPI, action.data);\r\n        console.log(\"result.data(from server) : \", result.data);\r\n\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            // data: action.data,\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction logOutAPI(data) {\r\n    return axios.post('/api/login', data);\r\n}\r\n\r\nfunction* logOut(action) {\r\n    try {\r\n        console.log('saga logout');\r\n        // const result = yield call(logInAPI);\r\n        yield delay(2000);\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction followAPI() {\r\n    return axios.post('/api/follow');\r\n}\r\nfunction* follow(action) {\r\n    try {\r\n        // const result = yield call(followAPI);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: FOLLOW_SUCCESS,\r\n            data: action.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: FOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction unfollowAPI() {\r\n    return axios.post('/api/unfollow');\r\n}\r\nfunction* unfollow(action) {\r\n    try {\r\n        // const result = yield call(unfollowAPI);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: UNFOLLOW_SUCCESS,\r\n            data: action.data,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: UNFOLLOW_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\nfunction signUpAPI(data) {\r\n    console.log(\"saga signUpAPI 실행 확인 data :\", data);\r\n    return axios.post('/user', data);\r\n}\r\nfunction* signUp(action) {\r\n    try {\r\n        // yield delay(1000);\r\n        // console.log(\"action.data(회원 가입 정보) from saga : \", action.data);\r\n        const result = yield call(signUpAPI, action.data);\r\n        console.log(\"response for 회원 가입 at saga : \", result);\r\n\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    console.log(\"saga watch 실행 check\");\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\nfunction* watchLogIn() {\r\n    console.log(\"saga watch 실행 check\");\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchSignUp),\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}