{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport shortId from 'shortid';\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: 'terecal'\n    },\n    content: 'sample 게시글 #test',\n    Images: [{\n      src: 'https://image.shutterstock.com/image-vector/sample-red-square-grunge-stamp-260nw-338250266.jpg'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\n    }],\n    Comments: [{\n      User: {\n        nickname: 'nero'\n      },\n      content: '첫번째 더미 댓글 fisrt '\n    }, {\n      User: {\n        nickname: 'hero'\n      },\n      content: '두번째 더미 댓글 second'\n    }]\n  }],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: \"제로초\"\n    }\n  };\n};\n\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // case ADD_POST: {\n    //     return {\n    //         ...state,\n    //         mainPosts: [dummyPost, ...state.mainPosts],\n    //         postAdded: true,\n    //     };\n    // }\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostDone: true,\n        mainPosts: [dummyPost(action.data)].concat(_toConsumableArray(state.mainPosts))\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostError: action.error\n      });\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentDone: false,\n        addCommentError: null\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      var mainPosts = _toConsumableArray(state.mainPosts);\n\n      var postIndex = state.mainPosts.findIndex(function (v) {\n        return v.id === action.data.postId;\n      });\n\n      var post = _objectSpread({}, state.mainPosts[postIndex]);\n\n      var Comments = [].concat(_toConsumableArray(post.Comments), [dummyComment(action.data.content)]);\n      mainPosts[postIndex] = _objectSpread(_objectSpread({}, post), {}, {\n        Comments: Comments\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: mainPosts,\n        addCommentLoading: false,\n        addCommentDone: true\n      });\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentError: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/nodebird2/front/reducers/post.js"],"names":["shortId","initialState","mainPosts","id","User","nickname","content","Images","src","Comments","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","dummyPost","data","dummyComment","generate","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","reducer","state","action","type","error","postIndex","findIndex","v","postId","post"],"mappings":";;;;;;;AAAA,OAAOA,OAAP,MAAoB,SAApB;AAGA,OAAO,IAAMC,YAAY,GAAG;AACxBC,EAAAA,SAAS,EAAE,CACP;AACIC,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE;AACFD,MAAAA,EAAE,EAAE,CADF;AAEFE,MAAAA,QAAQ,EAAE;AAFR,KAFV;AAMIC,IAAAA,OAAO,EAAE,kBANb;AAOIC,IAAAA,MAAM,EAAE,CAAC;AACLC,MAAAA,GAAG,EAAE;AADA,KAAD,EAEL;AACCA,MAAAA,GAAG,EAAE;AADN,KAFK,EAIL;AACCA,MAAAA,GAAG,EAAE;AADN,KAJK,CAPZ;AAcIC,IAAAA,QAAQ,EAAE,CAAC;AACPL,MAAAA,IAAI,EAAE;AACFC,QAAAA,QAAQ,EAAE;AADR,OADC;AAIPC,MAAAA,OAAO,EAAE;AAJF,KAAD,EAKP;AACCF,MAAAA,IAAI,EAAE;AACFC,QAAAA,QAAQ,EAAE;AADR,OADP;AAICC,MAAAA,OAAO,EAAE;AAJV,KALO;AAdd,GADO,CADa;AA6BxBI,EAAAA,cAAc,EAAE,KA7BQ;AA8BxBC,EAAAA,WAAW,EAAE,KA9BW;AA+BxBC,EAAAA,YAAY,EAAE,IA/BU;AAiCxBC,EAAAA,iBAAiB,EAAE,KAjCK;AAkCxBC,EAAAA,cAAc,EAAE,KAlCQ;AAmCxBC,EAAAA,eAAe,EAAE;AAnCO,CAArB;;AAuCP,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD;AAAA,SAAW;AACzBd,IAAAA,EAAE,EAAEc,IAAI,CAACd,EADgB;AAEzBG,IAAAA,OAAO,EAAEW,IAAI,CAACX,OAFW;AAGzBF,IAAAA,IAAI,EAAE;AACFD,MAAAA,EAAE,EAAE,CADF;AAEFE,MAAAA,QAAQ,EAAE;AAFR,KAHmB;AAOzBE,IAAAA,MAAM,EAAE,EAPiB;AAQzBE,IAAAA,QAAQ,EAAE;AARe,GAAX;AAAA,CAAlB;;AAWA,IAAMS,YAAY,GAAG,SAAfA,YAAe,CAACD,IAAD;AAAA,SAAW;AAC5Bd,IAAAA,EAAE,EAAEH,OAAO,CAACmB,QAAR,EADwB;AAE5Bb,IAAAA,OAAO,EAAEW,IAFmB;AAG5Bb,IAAAA,IAAI,EAAE;AACFD,MAAAA,EAAE,EAAE,CADF;AAEFE,MAAAA,QAAQ,EAAE;AAFR;AAHsB,GAAX;AAAA,CAArB;;AASA,OAAO,IAAMe,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;;AAEP,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzB1B,YAAyB;AAAA,MAAX2B,MAAW;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAKT,gBAAL;AACI,6CACOO,KADP;AAEIjB,QAAAA,cAAc,EAAE,IAFpB;AAGIC,QAAAA,WAAW,EAAE,KAHjB;AAIIC,QAAAA,YAAY,EAAE;AAJlB;;AAMJ,SAAKS,gBAAL;AACI,6CACOM,KADP;AAEIjB,QAAAA,cAAc,EAAE,KAFpB;AAGIC,QAAAA,WAAW,EAAE,IAHjB;AAIIT,QAAAA,SAAS,GAAGc,SAAS,CAACY,MAAM,CAACX,IAAR,CAAZ,4BAA8BU,KAAK,CAACzB,SAApC;AAJb;;AAMJ,SAAKoB,gBAAL;AACI,6CACOK,KADP;AAEIjB,QAAAA,cAAc,EAAE,KAFpB;AAGIE,QAAAA,YAAY,EAAEgB,MAAM,CAACE;AAHzB;;AAMJ,SAAKP,mBAAL;AACI,6CACOI,KADP;AAEId,QAAAA,iBAAiB,EAAE,IAFvB;AAGIC,QAAAA,cAAc,EAAE,KAHpB;AAIIC,QAAAA,eAAe,EAAE;AAJrB;;AAMJ,SAAKS,mBAAL;AACI,UAAMtB,SAAS,sBAAOyB,KAAK,CAACzB,SAAb,CAAf;;AACA,UAAM6B,SAAS,GAAGJ,KAAK,CAACzB,SAAN,CAAgB8B,SAAhB,CACd,UAACC,CAAD;AAAA,eAAOA,CAAC,CAAC9B,EAAF,KAASyB,MAAM,CAACX,IAAP,CAAYiB,MAA5B;AAAA,OADc,CAAlB;;AAGA,UAAMC,IAAI,qBAAQR,KAAK,CAACzB,SAAN,CAAgB6B,SAAhB,CAAR,CAAV;;AACA,UAAMtB,QAAQ,gCAAO0B,IAAI,CAAC1B,QAAZ,IAAsBS,YAAY,CAACU,MAAM,CAACX,IAAP,CAAYX,OAAb,CAAlC,EAAd;AACAJ,MAAAA,SAAS,CAAC6B,SAAD,CAAT,mCAA4BI,IAA5B;AAAkC1B,QAAAA,QAAQ,EAARA;AAAlC;AACA,6CACOkB,KADP;AAEIzB,QAAAA,SAAS,EAATA,SAFJ;AAGIW,QAAAA,iBAAiB,EAAE,KAHvB;AAIIC,QAAAA,cAAc,EAAE;AAJpB;;AAMJ,SAAKW,mBAAL;AACI,6CACOE,KADP;AAEId,QAAAA,iBAAiB,EAAE,KAFvB;AAGIE,QAAAA,eAAe,EAAEa,MAAM,CAACE;AAH5B;;AAMJ;AACI,aAAOH,KAAP;AA1DR;AA4DH,CA7DD;;AA+DA,eAAeD,OAAf","sourcesContent":["import shortId from 'shortid';\r\n\r\n\r\nexport const initialState = {\r\n    mainPosts: [\r\n        {\r\n            id: 1,\r\n            User: {\r\n                id: 1,\r\n                nickname: 'terecal',\r\n            },\r\n            content: 'sample 게시글 #test',\r\n            Images: [{\r\n                src: 'https://image.shutterstock.com/image-vector/sample-red-square-grunge-stamp-260nw-338250266.jpg',\r\n            }, {\r\n                src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\r\n            }, {\r\n                src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\r\n            }],\r\n            Comments: [{\r\n                User: {\r\n                    nickname: 'nero',\r\n                },\r\n                content: '첫번째 더미 댓글 fisrt ',\r\n            }, {\r\n                User: {\r\n                    nickname: 'hero',\r\n                },\r\n                content: '두번째 더미 댓글 second',\r\n            }]\r\n        },\r\n    ],\r\n    addPostLoading: false,\r\n    addPostDone: false,\r\n    addPostError: null,\r\n\r\n    addCommentLoading: false,\r\n    addCommentDone: false,\r\n    addCommentError: null,\r\n};\r\n\r\n\r\nconst dummyPost = (data) => ({\r\n    id: data.id,\r\n    content: data.content,\r\n    User: {\r\n        id: 1,\r\n        nickname: '제로초',\r\n    },\r\n    Images: [],\r\n    Comments: [],\r\n});\r\n\r\nconst dummyComment = (data) => ({\r\n    id: shortId.generate(),\r\n    content: data,\r\n    User: {\r\n        id: 1,\r\n        nickname: \"제로초\",\r\n    },\r\n});\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        // case ADD_POST: {\r\n        //     return {\r\n        //         ...state,\r\n        //         mainPosts: [dummyPost, ...state.mainPosts],\r\n        //         postAdded: true,\r\n        //     };\r\n        // }\r\n        case ADD_POST_REQUEST:\r\n            return {\r\n                ...state,\r\n                addPostLoading: true,\r\n                addPostDone: false,\r\n                addPostError: null,\r\n            };\r\n        case ADD_POST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                addPostLoading: false,\r\n                addPostDone: true,\r\n                mainPosts: [dummyPost(action.data), ...state.mainPosts],\r\n            };\r\n        case ADD_POST_FAILURE:\r\n            return {\r\n                ...state,\r\n                addPostLoading: false,\r\n                addPostError: action.error,\r\n            };\r\n\r\n        case ADD_COMMENT_REQUEST:\r\n            return {\r\n                ...state,\r\n                addCommentLoading: true,\r\n                addCommentDone: false,\r\n                addCommentError: null,\r\n            };\r\n        case ADD_COMMENT_SUCCESS:\r\n            const mainPosts = [...state.mainPosts]\r\n            const postIndex = state.mainPosts.findIndex(\r\n                (v) => v.id === action.data.postId\r\n            );\r\n            const post = { ...state.mainPosts[postIndex] };\r\n            const Comments = [...post.Comments, dummyComment(action.data.content),];\r\n            mainPosts[postIndex] = { ...post, Comments };\r\n            return {\r\n                ...state,\r\n                mainPosts,\r\n                addCommentLoading: false,\r\n                addCommentDone: true,\r\n            };\r\n        case ADD_COMMENT_FAILURE:\r\n            return {\r\n                ...state,\r\n                addCommentLoading: false,\r\n                addCommentError: action.error,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}