{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(logIn),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(logOut),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogOut),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogIn),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\n// import { all } from 'redux-saga/effects';\nimport { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE } from '../reducers/user';\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction logIn(action) {\n  return _regeneratorRuntime.wrap(function logIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          console.log('saga logIn'); // const result = yield call(logInAPI);\n\n          _context.next = 4;\n          return delay(2000);\n\n        case 4:\n          _context.next = 6;\n          return put({\n            type: LOG_IN_SUCCESS,\n            // data: { ...action.data, nickname: \"hyun\" },\n            data: action.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 13;\n          return put({\n            type: LOG_IN_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction logOutAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction logOut(action) {\n  return _regeneratorRuntime.wrap(function logOut$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          console.log('saga logout'); // const result = yield call(logInAPI);\n\n          _context2.next = 4;\n          return delay(2000);\n\n        case 4:\n          _context2.next = 6;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 6:\n          _context2.next = 13;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(_context2.t0);\n          _context2.next = 13;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          console.log(\"saga watch 실행 check\");\n          _context3.next = 3;\n          return takeLatest(LOG_OUT_REQUEST, logOut);\n\n        case 3:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nfunction watchLogIn() {\n  return _regeneratorRuntime.wrap(function watchLogIn$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          console.log(\"saga watch 실행 check\");\n          _context4.next = 3;\n          return takeLatest(LOG_IN_REQUEST, logIn);\n\n        case 3:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([fork(watchLogIn), fork(watchLogOut)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["d:/nodebird2/front/sagas/user.js"],"names":["logIn","logOut","watchLogOut","watchLogIn","userSaga","all","call","delay","fork","put","takeLatest","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","logInAPI","data","axios","post","action","console","log","type","error","response","logOutAPI"],"mappings":";;oDAeUA,K;qDAwBAC,M;qDAiBAC,W;qDAIAC,U;qDAKeC,Q;;AAjEzB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,GAAjC,EAAsCC,UAAtC,QAAwD,oBAAxD;AACA,SACIC,cADJ,EAEIC,cAFJ,EAGIC,cAHJ,EAIIC,eAJJ,EAKIC,eALJ,EAMIC,eANJ,QAOO,kBAPP;;AASA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACpB,SAAOC,KAAK,CAACC,IAAN,CAAW,YAAX,EAAyBF,IAAzB,CAAP;AACH;;AAED,SAAUlB,KAAV,CAAgBqB,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQC,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAFR,CAGQ;;AAHR;AAIQ,iBAAMhB,KAAK,CAAC,IAAD,CAAX;;AAJR;AAAA;AAKQ,iBAAME,GAAG,CAAC;AACNe,YAAAA,IAAI,EAAEZ,cADA;AAEN;AACAM,YAAAA,IAAI,EAAEG,MAAM,CAACH;AAHP,WAAD,CAAT;;AALR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAYQI,UAAAA,OAAO,CAACG,KAAR;AAZR;AAaQ,iBAAMhB,GAAG,CAAC;AACNe,YAAAA,IAAI,EAAEX,cADA;AAENY,YAAAA,KAAK,EAAE,YAAIC,QAAJ,CAAaR;AAFd,WAAD,CAAT;;AAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoBA,SAASS,SAAT,CAAmBT,IAAnB,EAAyB;AACrB,SAAOC,KAAK,CAACC,IAAN,CAAW,YAAX,EAAyBF,IAAzB,CAAP;AACH;;AAED,SAAUjB,MAAV,CAAiBoB,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQC,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAFR,CAGQ;;AAHR;AAIQ,iBAAMhB,KAAK,CAAC,IAAD,CAAX;;AAJR;AAAA;AAKQ,iBAAME,GAAG,CAAC;AACNe,YAAAA,IAAI,EAAET;AADA,WAAD,CAAT;;AALR;AAAA;AAAA;;AAAA;AAAA;AAAA;AASQO,UAAAA,OAAO,CAACG,KAAR;AATR;AAUQ,iBAAMhB,GAAG,CAAC;AACNe,YAAAA,IAAI,EAAER,eADA;AAENS,YAAAA,KAAK,EAAE,aAAIC,QAAJ,CAAaR;AAFd,WAAD,CAAT;;AAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA,SAAUhB,WAAV;AAAA;AAAA;AAAA;AAAA;AACIoB,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AADJ;AAEI,iBAAMb,UAAU,CAACI,eAAD,EAAkBb,MAAlB,CAAhB;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUE,UAAV;AAAA;AAAA;AAAA;AAAA;AACImB,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AADJ;AAEI,iBAAMb,UAAU,CAACC,cAAD,EAAiBX,KAAjB,CAAhB;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAe,SAAUI,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CACNG,IAAI,CAACL,UAAD,CADE,EAENK,IAAI,CAACN,WAAD,CAFE,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["// import { all } from 'redux-saga/effects';\r\nimport { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n    LOG_IN_REQUEST,\r\n    LOG_IN_SUCCESS,\r\n    LOG_IN_FAILURE,\r\n    LOG_OUT_REQUEST,\r\n    LOG_OUT_SUCCESS,\r\n    LOG_OUT_FAILURE\r\n} from '../reducers/user';\r\n\r\nfunction logInAPI(data) {\r\n    return axios.post('/api/login', data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        console.log('saga logIn');\r\n        // const result = yield call(logInAPI);\r\n        yield delay(2000);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            // data: { ...action.data, nickname: \"hyun\" },\r\n            data: action.data,\r\n\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction logOutAPI(data) {\r\n    return axios.post('/api/login', data);\r\n}\r\n\r\nfunction* logOut(action) {\r\n    try {\r\n        console.log('saga logout');\r\n        // const result = yield call(logInAPI);\r\n        yield delay(2000);\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    console.log(\"saga watch 실행 check\");\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\nfunction* watchLogIn() {\r\n    console.log(\"saga watch 실행 check\");\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}