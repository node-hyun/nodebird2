{"ast":null,"code":"var _jsxFileName = \"D:\\\\nodebird2\\\\front\\\\pages\\\\index.js\";\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport AppLayout from \"../components/AppLayout\";\nimport PostForm from \"../components/PostForm\";\nimport Head from \"next/head\";\nimport PostCard from \"../components/PostCard\";\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user); // const { mainPosts } = useSelector(state => state.post);\n\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    function onScroll() {\n      // console.log(window.scrollY + document.documentElement.clientHeight, document.documentElement.scrollHeight);\n      if (window.scrollY + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\n        console.log(\"화면이 바닥에 도달했습니다.\");\n\n        if (hasMorePosts && !loadPostsLoading) {\n          console.log(\"화면이 바닥에 도달 + 포스팅 추가!!\");\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            data: mainPosts[mainPosts.length - 1].id\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 20\n    }, this), mainPosts.map(c => {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: c\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Home;","map":{"version":3,"sources":["D:/nodebird2/front/pages/index.js"],"names":["React","useEffect","useSelector","useDispatch","AppLayout","PostForm","Head","PostCard","LOAD_POSTS_REQUEST","Home","dispatch","me","state","user","mainPosts","hasMorePosts","loadPostsLoading","post","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","console","log","type","data","length","id","addEventListener","removeEventListener","map","c"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,SAASC,kBAAT,QAAmC,kBAAnC;;;AAGA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAM;AAAEQ,IAAAA;AAAF,MAAST,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B,CAHe,CAIf;;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2BC,IAAAA;AAA3B,MAAgDd,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACK,IAAlB,CAAjE;AAGAhB,EAAAA,SAAS,CAAC,MAAM;AAEZ,aAASiB,QAAT,GAAoB;AAChB;AACA,UAAIC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,IAA0DF,QAAQ,CAACC,eAAT,CAAyBE,YAAvF,EAAqG;AACjGC,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AACA,YAAIX,YAAY,IAAI,CAACC,gBAArB,EAAuC;AACnCS,UAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAhB,UAAAA,QAAQ,CAAC;AACLiB,YAAAA,IAAI,EAAEnB,kBADD;AAELoB,YAAAA,IAAI,EAAEd,SAAS,CAACA,SAAS,CAACe,MAAV,GAAmB,CAApB,CAAT,CAAgCC;AAFjC,WAAD,CAAR;AAIH;AACJ;AACJ;;AAEDX,IAAAA,MAAM,CAACY,gBAAP,CAAwB,QAAxB,EAAkCb,QAAlC;AAEA,WAAO,MAAM;AACTC,MAAAA,MAAM,CAACa,mBAAP,CAA2B,QAA3B,EAAqCd,QAArC;AACH,KAFD;AAIH,GAtBQ,EAsBN,EAtBM,CAAT;AAwBA,sBACI,QAAC,SAAD;AAAA,4BACI,QAAC,IAAD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAKKP,EAAE,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YALX,EAMKG,SAAS,CAACmB,GAAV,CAAeC,CAAD,IAAO;AAClB,0BACI,QAAC,QAAD;AAAqB,QAAA,IAAI,EAAEA;AAA3B,SAAeA,CAAC,CAACJ,EAAjB;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJA,CANL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA/CD;;AAkDA,eAAerB,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport Head from \"next/head\";\r\nimport PostCard from \"../components/PostCard\";\r\n\r\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\r\n\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { me } = useSelector((state) => state.user);\r\n    // const { mainPosts } = useSelector(state => state.post);\r\n    const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        function onScroll() {\r\n            // console.log(window.scrollY + document.documentElement.clientHeight, document.documentElement.scrollHeight);\r\n            if (window.scrollY + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\r\n                console.log(\"화면이 바닥에 도달했습니다.\");\r\n                if (hasMorePosts && !loadPostsLoading) {\r\n                    console.log(\"화면이 바닥에 도달 + 포스팅 추가!!\");\r\n                    dispatch({\r\n                        type: LOAD_POSTS_REQUEST,\r\n                        data: mainPosts[mainPosts.length - 1].id,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        window.addEventListener('scroll', onScroll);\r\n\r\n        return () => {\r\n            window.removeEventListener('scroll', onScroll);\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <AppLayout>\r\n            <Head>\r\n                <title>Home</title>\r\n            </Head>\r\n            {/* <PostForm /> */}\r\n            {me && <PostForm />}\r\n            {mainPosts.map((c) => {\r\n                return (\r\n                    <PostCard key={c.id} post={c} />\r\n                );\r\n            })}\r\n            \r\n        </AppLayout>\r\n    );\r\n};\r\n\r\n\r\nexport default Home;\r\n\r\n"]},"metadata":{},"sourceType":"module"}