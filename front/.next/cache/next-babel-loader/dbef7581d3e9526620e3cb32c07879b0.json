{"ast":null,"code":"var _jsxFileName = \"D:\\\\nodebird2\\\\front\\\\pages\\\\file_upload.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useCallback, useEffect } from \"react\";\nimport styled from 'styled-components';\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getColor = props => {\n  if (props.isDragAccept) {\n    return '#00e676';\n  }\n\n  if (props.isDragReject) {\n    return '#ff1744';\n  }\n\n  if (props.isDragActive) {\n    return '#2196f3';\n  }\n\n  return '#eeeeee';\n};\n\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  border-width: 2px;\n  border-radius: 2px;\n  border-color: ${props => getColor(props)};\n  border-style: dashed;\n  background-color: #fafafa;\n  color: #bdbdbd;\n  outline: none;\n  transition: border .24s ease-in-out;\n`;\n\nfunction file_upload() {\n  const onDrop = useCallback(acceptedFiles => {// Do something with the files\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(Container, _objectSpread(_objectSpread({}, getRootProps({\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  })), {}, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps()), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Drag 'n' drop some files here, or click to select files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\nexport default file_upload;","map":{"version":3,"sources":["D:/nodebird2/front/pages/file_upload.js"],"names":["React","useCallback","useEffect","styled","useDropzone","getColor","props","isDragAccept","isDragReject","isDragActive","Container","div","file_upload","onDrop","acceptedFiles","getRootProps","getInputProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,WAAT,QAA4B,gBAA5B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,MAAIA,KAAK,CAACC,YAAV,EAAwB;AACpB,WAAO,SAAP;AACH;;AACD,MAAID,KAAK,CAACE,YAAV,EAAwB;AACpB,WAAO,SAAP;AACH;;AACD,MAAIF,KAAK,CAACG,YAAV,EAAwB;AACpB,WAAO,SAAP;AACH;;AACD,SAAO,SAAP;AACH,CAXD;;AAaA,MAAMC,SAAS,GAAGP,MAAM,CAACQ,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkBL,KAAK,IAAID,QAAQ,CAACC,KAAD,CAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA,CAdA;;AAgBA,SAASM,WAAT,GAAuB;AACnB,QAAMC,MAAM,GAAGZ,WAAW,CAACa,aAAa,IAAI,CACxC;AACH,GAFyB,EAEvB,EAFuB,CAA1B;AAGA,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,aAAhB;AAA+BP,IAAAA;AAA/B,MAAgDL,WAAW,CAAC;AAAES,IAAAA;AAAF,GAAD,CAAjE;AAEA,sBACI,QAAC,SAAD,kCAAeE,YAAY,CAAC;AAAEN,IAAAA,YAAF;AAAgBF,IAAAA,YAAhB;AAA8BC,IAAAA;AAA9B,GAAD,CAA3B;AAAA,4BACI,mCAAWQ,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;AAED,eAAeJ,WAAf","sourcesContent":["import React, { useCallback, useEffect } from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nimport { useDropzone } from 'react-dropzone'\r\n\r\nconst getColor = (props) => {\r\n    if (props.isDragAccept) {\r\n        return '#00e676';\r\n    }\r\n    if (props.isDragReject) {\r\n        return '#ff1744';\r\n    }\r\n    if (props.isDragActive) {\r\n        return '#2196f3';\r\n    }\r\n    return '#eeeeee';\r\n}\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n  border-width: 2px;\r\n  border-radius: 2px;\r\n  border-color: ${props => getColor(props)};\r\n  border-style: dashed;\r\n  background-color: #fafafa;\r\n  color: #bdbdbd;\r\n  outline: none;\r\n  transition: border .24s ease-in-out;\r\n`;\r\n\r\nfunction file_upload() {\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        // Do something with the files\r\n    }, [])\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\r\n\r\n    return (\r\n        <Container {...getRootProps({ isDragActive, isDragAccept, isDragReject })}>\r\n            <input {...getInputProps()} />\r\n            <p>Drag 'n' drop some files here, or click to select files</p>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default file_upload\r\n"]},"metadata":{},"sourceType":"module"}